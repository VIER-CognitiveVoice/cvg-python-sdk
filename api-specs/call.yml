openapi: 3.0.0
servers:
  - description: Production
    url: https://cognitivevoice.io/v1
  - description: Staging
    url: https://stage.cognitivevoice.io/v1
  - description: Local Server
    url: https://localhost/v1
info:
  description: |-
    With the VIER Cognitive Voice Call API you can easily do things like building your voicebots,
    which can be reached via phone calls. You can receive speech input of the customer as
    transcripted text in many languages. Let different voices say your text in this call.
    After the voicebot dialog you may drop the call (call fully completed by bot) or transfer
    the call e.g. to the relevant service hotline (human agent required to satisfy customer).

    On some events, such as receiving an incoming phone call or transcription of a customer's
    utterance, VIER makes an HTTP request to a URL to be provided by you. This is called
    a webhook. To handle a webhook, you need to build a small web application that can accept
    the HTTP requests. The required webhooks are listed as bot endpoints.

    The operations defined in this specification can be used by your bot to trigger certain
    voice and/or telephony related actions on the currently active call.

    Most of the available operations are subject to queuing, meaning that the commands, even
    when triggered simultaneously, will not be executed simultaneously. Instead, these operations
    will be executed after each other. This is being done to simplify bot development as otherwise
    the bot would need to hit exact timings for the operations it triggers to not produce
    overlapping audio in the phone and still be quick enough to feel responsive to the
    conversation partner.

    The queuing mechanism allows the bot to simply trigger several operations after each
    other and CVG makes sure to to execute them without overlap after each other. Some
    operations also support a `bargeIn` flag, which makes the operation interruptible by
    the conversation partner.

    All operations that are not subject to queuing will document this fact in their respective
    description.
  version: '{{VERSION}}'
  title: VIER Cognitive Voice Call API
  contact:
    email: support@vier.ai
tags:
  - name: call
    description: endpoints related to call operations
paths:
  /call/dial:
    post:
      tags:
        - call
      summary: Begin a call to an external number
      operationId: dial
      description: |-
        Begin a call to an external number.

        This request is blocking, i.e. the response will be held until the call has either been accepted or rejected.
        Make sure HTTP client read timeouts are configured accordingly for requests to this endpoint.

        Due to limitations imposed by the telephony infrastructure, the amount of concurrent outbound calls is rate
        limited. Since the exact amount of possible concurrent calls depends on many technical and organizational details,
        the platform does not provide any details on how many calls per unit time can be done, it just informs the client
        application if a rate limitation was hit. The application driving outbound calls is expected to handle this
        scenario by applying common retry techniques like e.g. binary exponential backoff.

        This operation is not subject to queuing since it happens before a call has been established.
      externalDocs:
        url: /docs/APIs/dialout.html
      responses:
        '200':
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundCallResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundCallResult'
      requestBody:
        description: Parameters for the dial operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DialParameters'
  /call/say:
    post:
      tags:
        - call
      summary: Say something to the call
      operationId: say
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request
        '404':
          description: Dialog ID or synthesizer vendor / profile not found
        '413':
          description: Text is longer than 10,000 characters
      requestBody:
        description: |-
          Parameters for the say operation.
          Use SSML tags to customize and control aspects of speech such as pronunciation, volume, and speech rate.
          When using SSML enclose the entire text in a `<speak>` tag.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SayParameters'
  /call/prompt:
    post:
      tags:
        - call
      summary: Say something to the call with a prompt
      operationId: prompt
      externalDocs:
        url: /docs/APIs/prompt.html
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request
        '404':
          description: Dialog ID or synthesizer vendor / profile not found
        '413':
          description: Text is longer than 10,000 characters
      requestBody:
        description: |-
          Prompts are a convenient way to ask for different types of user input.
          While a prompt is active, the dialog behaves slightly differently than usual:

          - No `type = DTMF` events are sent to the Bot API's `/message` endpoint.
            `type = SPEECH` events still make it to the bot as long as they don't match one of the `MultipleChoice`
            prompt choices. Since `Number` prompts don't accept voice input, they don't block any speech events.
          - No `/inactivity` events are sent to the bot, since the prompt's own timeout takes precedence over the
            inactivity timeout configured in the project settings.

          There's three ways a prompt can end:

          - A Bot API `/answer` event with type `Timeout` if the prompt timeout has expired.
          - A Bot API `/answer` event with type `MultipleChoice` or `Number` if one of the stop conditions is met.
          - `/call/prompt` is called again, which effectively cancels the previously active prompt.
            This also discards any input that was already aggregated.

          The prompt timeout restarts on user input (transcription results or DTMF).
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptParameters'
  /call/play:
    post:
      tags:
        - call
      summary: Play something to the call
      operationId: play
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request
        '404':
          description: Dialog ID not found
      requestBody:
        description: Parameters for the play operation.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayParameters'
  /call/transcription/switch:
    post:
      tags:
        - call
      summary: Switch transcription vendor/profile and/or language
      operationId: switchTranscription
      description: |-
        Switch transcription to a different vendor/profile and/or language.

        The `transcribers` and `language` parameters are optional and fall back to the project settings.
        As a result, you can omit both of them to reset transcription back to the project settings.
      responses:
        '204':
          description: Operation successful
        '404':
          description: Dialog ID or transcriber vendor / profile not found
      requestBody:
        description: Parameters for the transcription switch operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranscriptionSwitchParameters'
  /call/recording/start:
    post:
      tags:
        - call
      summary: Start or resume recording of the call
      operationId: startRecording
      description: |-
        Starts or resumes recording of the call.

        IMPORTANT: it is the responsibility of the API user to ensure that recording the participants
        of the call is legal according to the privacy laws and regulations that apply in the respective country.

        Recordings can only be made if this has been explicitly allowed in each layer of the hierarchy
        (reseller, customer, account, project). They are stored for the duration specified in the project settings.
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request - call recording is already started / terminated or call is forwarded / bridged
        '403':
          description: Recordings are disabled for the project this call belongs to
        '404':
          description: Dialog ID not found
      requestBody:
        description: Parameters for the recording start operation
        required: true
        content:
          application/json:
            schema:
              $ref: 'shared/recording.yml#/components/schemas/RecordingStartParameters'
  /call/recording/stop:
    post:
      tags:
        - call
      summary: Pause or terminate recording of the call
      operationId: stopRecording
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request - call recording is already stopped or call is forwarded / bridged
        '403':
          description: Recordings are disabled for the project this call belongs to
        '404':
          description: Dialog ID not found
      requestBody:
        description: Parameters for the recording stop operation
        required: true
        content:
          application/json:
            schema:
              $ref: 'shared/recording.yml#/components/schemas/RecordingStopParameters'
  /call/bridge:
    post:
      tags:
        - call
      summary: Bridge the call to a different destination for agent assistance
      operationId: bridge
      description: |-
        Bridge the call to a different destination for the agent assistance use case.

        This request is blocking, i.e. the response will be held until the call has either been accepted or rejected.
        Make sure HTTP client read timeouts are configured accordingly for requests to this endpoint.

        The called number is constructed by appending a random n-digit number to `headNumber` (where n is `extensionLength`).
        The number is then reserved until the Assist API's `/assist/accept` endpoint is called, which frees the number again.
        If this doesn't happen within 130 seconds, the allocation times out.

        After a successful bridge, the bot is now out of the loop and will neither receive further messages nor
        can send any commands. If the call is being recorded, the recording will also be stopped automatically.
      responses:
        '200':
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundCallResult'
        '404':
          description: Dialog not found for dialog ID
      requestBody:
        description: Parameters for the bridge operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BridgeParameters'
  /call/forward:
    post:
      tags:
        - call
      summary: Forward the call to a different destination
      operationId: forward
      description: |-
        Forward the call to a different destination.

        This request is blocking, i.e. the response will be held until the call has either been accepted or rejected.
        Make sure HTTP client read timeouts are configured accordingly for requests to this endpoint.

        After a successful forward, the bot is now out of the loop and will neither receive further messages nor
        can send any commands. If the call is being recorded, the recording will also be stopped automatically.
      responses:
        '200':
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundCallResult'
        '404':
          description: Dialog not found for dialog ID
      requestBody:
        description: Parameters for the forward operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardParameters'
  /call/drop:
    post:
      tags:
        - call
      summary: Drop the call
      operationId: drop
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request
        '404':
          description: Dialog ID not found
      requestBody:
        description: Parameters for the drop operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropParameters'
  /call/data:
    post:
      deprecated: true
      tags:
        - call
      summary: Deprecated, use the `/dialog/{resellerToken}/{dialogId}/data` endpoint instead.
      operationId: data
      description: |-
        Deprecated, use the `/dialog/{resellerToken}/{dialogId}/data` endpoint instead.
        This operation is not subject to queuing.
      responses:
        '204':
          description: Operation successful
        '400':
          description: Bad request
        '404':
          description: Dialog ID not found
      requestBody:
        description: Parameters for the data operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataParameters'
components:
  schemas:
    CallParameters:
      type: object
      required:
        - dialogId
      properties:
        dialogId:
          $ref: 'shared/tokens.yml#/components/schemas/DialogId'

    SynthesisParameters:
      allOf:
        - $ref: '#/components/schemas/CallParameters'
        - type: object
          required:
            - text
          properties:
            text:
              type: string
              description: |-
                The text to be synthesized. The text must not consist solely of whitespace.

                We recommend always setting the `interpretAs` property as it avoids mis-detections and enables some
                basic SSML validation. If `interpretAs` is missing, the platform will try to automatically determine if
                the text is SSML or plain text.

                Valid SSML has to be surrounded with a `<speak>` tag. An explicit XML declaration is not required.

                Note that SSML may be modified slightly for better compatibility with different text-to-speech services
                (mostly inserting required boilerplate).
              example: <speak><prosody rate="125%">Hello!</prosody></speak>
              minLength: 1
            interpretAs:
              $ref: '#/components/schemas/InterpretAs'
            language:
              $ref: 'shared/language.yml#/components/schemas/Language'
            synthesizers:
              $ref: 'shared/speech_service.yml#/components/schemas/SynthesizerSelection'
            bargeIn:
              type: boolean
              default: false

    InterpretAs:
      type: string
      description: |-
        Explicitly states what the given text should be interpreted as.
        If omitted, CVG tries to detect SSML and otherwise assumes plain text.

        Use `TEXT` if the text sent by your bot might contain XML-like text that could lead to a false SSML
        detection.

        Use `SSML` if the text sent by your bot should always be interpreted as SSML, even if it does not
        start with a `<speak>` tag.
      enum:
        - TEXT
        - SSML
      example: SSML

    SayParameters:
      allOf:
        - $ref: '#/components/schemas/SynthesisParameters'

    PromptParameters:
      allOf:
        - $ref: '#/components/schemas/SynthesisParameters'
        - type: object
          required:
            - timeout
            - type
          properties:
            timeout:
              $ref: 'shared/time.yml#/components/schemas/Duration'
              description: |-
                Wait time in milliseconds before the prompt times out.
                The timeout starts when the synthesized text has finished playing.
              example: 15000
            type:
              $ref: '#/components/schemas/PromptParametersType'

    PromptParametersType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          enum:
            - MultipleChoice
            - Number
      discriminator:
        propertyName: name
      example:
        name: Number
        submitInputs:
          - DTMF_#
        maxDigits: 4
    MultipleChoice:
      allOf:
        - $ref: '#/components/schemas/PromptParametersType'
        - type: object
          required:
            - choices
          properties:
            choices:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Synonyms'
              example:
                'no':
                  - 'no'
                  - nope
                  - no way
                  - DTMF_0
                'yes':
                  - 'yes'
                  - yeah
                  - affirmative
                  - DTMF_1
          description: |-
            Require the user to select one item from a list of pre-defined choices, such as "Yes" / "No".
            Each choice can be triggered by any number of specified synonyms.
            A synonym must not be present in multiple choices.
    Synonyms:
      type: array
      minItems: 1
      items:
        type: string
        description: |-
          A synonym for this choice - either a TTS text, or a DTMF signal.
          DTMF signals are prefixed by `DTMF_`, such as `DTMF_#`.
        format: synonym
    Number:
      allOf:
        - $ref: '#/components/schemas/PromptParametersType'
        - type: object
          properties:
            submitInputs:
              $ref: '#/components/schemas/Synonyms'
              example:
                - DTMF_#
                - submit
              description: The input that terminates the prompt. Must not be a digit.
            maxDigits:
              type: integer
              example: 5
              minimum: 1
              description: |-
                The maximum amount of digits the number can have.
                If this property is set, input terminates once the limit has been reached.
          description: |-
            Require the user to enter a sequence of digits.
            Input is terminated once one of the `submitSignals` has been detected or the `maxDigits` limit has been reached.
          anyOf:
            - required:
                - submitSignals
            - required:
                - maxDigits
    PlayParameters:
      allOf:
        - $ref: '#/components/schemas/CallParameters'
        - type: object
          required:
            - url
          properties:
            url:
              type: string
              format: uri
              example: https://public.com/audio.wav
              description: |-
                Specifies the URL for the audio file to be played. Note the following requirements and limitations:

                  - The audio file must be hosted at an Internet-accessible HTTP(S) endpoint. In case of HTTPS the
                    domain hosting the audio file must present a valid, trusted SSL certificate.
                    Self-signed certificates cannot be used.
                  - The audio file must be a valid wav file (waveform audio file format).
                  - The file format must be one of the following:
                    - Linear PCM with signed 16 bits per sample, with a sample rate of 8000 Hz or 16000 Hz
                    - A-law with a sample rate of 8000 Hz
                    - µ-law with a sample rate of 8000 Hz

                The downloaded audio file is subject to caching, which means repeated use of the same URL *might* not
                lead to repeated requests to the audio file. These standard caching headers will be respected/sent:
                `Cache-Control`, `Expires`, `Last-Modified` and `ETag`. Note that caching is not guaranteed to happen
                and the systems delivering the audio files should be prepared to handle the load for each individual
                play operation being made.
            fallbackText:
              type: string
              description: |-
                An optional fallback text that is synthesized in case the audio file could not be played for any reason.
                Reasons could include that the server hosting the file is temporarily unavailable or that the audio file
                has an unsupported format.
            bargeIn:
              type: boolean
              default: false
    TranscriptionSwitchParameters:
      allOf:
        - $ref: '#/components/schemas/CallParameters'
        - type: object
          properties:
            language:
              $ref: 'shared/language.yml#/components/schemas/Language'
            transcribers:
              $ref: 'shared/speech_service.yml#/components/schemas/TranscriberSelection'
    CallTransferWhispering:
      type: object
      description: |-
        Whispering can be used to announce information about the call to the destination.
        This can be useful in a contact center setting, where a human might receive many calls about widely
        different subjects. For example, the whispering could tell the operator what product
        the call will be about.

        The whispering will happen as soon as the call has successfully been established, but before the two
        call parties are joined together. The announcement will only be heard by the callee.
      properties:
        text:
          type: string
          description: The text will be synthesized and played back to the callee.
          minLength: 1
    CallTransferParameters:
      allOf:
        - $ref: '#/components/schemas/CallParameters'
        - $ref: '#/components/schemas/OutboundCallParameters'
        - type: object
          properties:
            experimental-enableRingingTone:
              type: boolean
              default: false
              description: |-
                Enables the playback of a ringing tone while the call is in the process of transferring.
                This is an experimental flag that may be removed in the future!
            whispering:
              $ref: '#/components/schemas/CallTransferWhispering'
    BridgeParameters:
      allOf:
        - $ref: '#/components/schemas/CallTransferParameters'
        - type: object
          required:
            - headNumber
          properties:
            headNumber:
              $ref: 'shared/phone_number.yml#/components/schemas/HeadNumber'
            extensionLength:
              type: integer
              format: int32
              minimum: 0
              maximum: 12
              default: 3
              description: |-
                The number of digits for the generated extension to the head number.
                The length of the head number plus the length of the extension must result in a valid phone number (no more than 15 digits).
    ForwardParameters:
      allOf:
        - $ref: '#/components/schemas/CallTransferParameters'
        - type: object
          required:
            - destinationNumber
          properties:
            destinationNumber:
              $ref: 'shared/phone_number.yml#/components/schemas/DialoutNumber'
    DropParameters:
      allOf:
        - $ref: '#/components/schemas/CallParameters'
    DataParameters:
      allOf:
        - $ref: '#/components/schemas/CallParameters'
        - type: object
          required:
            - key
            - value
          properties:
            key:
              type: string
              example: "sentiment"
            value:
              type: string
              example: "neutral"
    CallerId:
      type: string
      description: |-
        The number to display to the callee. This is a best-effort feature since we cannot guarantee that all
        gateways the traffic flows through will retain this information.
      example: "+49721123456000"
      format: caller-id
    OutboundCallParameters:
      type: object
      properties:
        callerId:
          $ref: '#/components/schemas/CallerId'
        customSipHeaders:
          $ref: 'shared/data.yml#/components/schemas/CustomSipHeaders'
        acceptAnsweringMachines:
          type: boolean
          default: true
          description: |-
            Whether to talk with answering machines or immediately hang up on them. This is a best-effort feature since
            this mechanism relies on heuristics to determine if the callee is an answering machine or not based on
            the audio received in the first few seconds of the call. So even if this option is set to false, it may
            still happen that the bot talks to an answering machine.
        ringTimeout:
          $ref: 'shared/time.yml#/components/schemas/Duration'
          description: |-
            Wait time in milliseconds before the call is terminated. A maximum of 2 minutes is allowed.
            Answering machine detection will happen after the call has been accept and will not count towards this
            timeout.
          maximum: 120000
          default: 120000
          example: 15000
    DialParameters:
      allOf:
        - $ref: '#/components/schemas/OutboundCallParameters'
        - type: object
          required:
            - resellerToken
            - projectToken
            - destinationNumber
          properties:
            resellerToken:
              $ref: 'shared/tokens.yml#/components/schemas/ResellerToken'
            projectToken:
              $ref: 'shared/tokens.yml#/components/schemas/ProjectToken'
            destinationNumber:
              $ref: 'shared/phone_number.yml#/components/schemas/DialoutNumber'
    OutboundCallResult:
      type: object
      required:
        - status
        - ringTime
      properties:
        status:
          type: string
          enum:
            - Success
            - Failure
        ringTime:
          $ref: 'shared/time.yml#/components/schemas/Duration'
      discriminator:
        propertyName: status
        mapping:
          Success: '#/components/schemas/OutboundCallSuccess'
          Failure: '#/components/schemas/OutboundCallFailure'
    OutboundCallSuccess:
      allOf:
        - $ref: '#/components/schemas/OutboundCallResult'
        - type: object
          required:
            - ringStartTimestamp
            - dialogId
          properties:
            dialogId:
              $ref: 'shared/tokens.yml#/components/schemas/DialogId'
            ringStartTimestamp:
              $ref: 'shared/time.yml#/components/schemas/Timestamp'
    OutboundCallFailure:
      allOf:
        - $ref: '#/components/schemas/OutboundCallResult'
        - type: object
          required:
            - reason
            - message
          properties:
            ringStartTimestamp:
              $ref: 'shared/time.yml#/components/schemas/Timestamp'
            reason:
              type: string
              enum:
                - ALREADY_BRIDGED
                - ANSWERING_MACHINE
                - BOT_CALL_ENDED_WHILE_DIALING
                - DESTINATION_BLOCKED
                - DISABLED
                - HEAD_NUMBER_EXTENSIONS_EXHAUSTED
                - PROJECT_NOT_FOUND
                - RATE_LIMITED
                - REJECTED
                - RESELLER_NOT_FOUND
                - RING_TIMED_OUT
                - UNKNOWN
            message:
              type: string
