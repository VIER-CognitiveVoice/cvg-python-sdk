openapi: "3.0.0"
info:
  contact:
    email: ps@4com.de
    name: Platform Services
  description: This is an API to provide itu PhoneNumber information
  license:
    name: Proprietary license
  title: itu API
  version: 1.2.0
paths:
  /phoneNumber/{phone_number}/:
    get:
      parameters:
        - description: phone number
          in: path
          name: phone_number
          required: true
          schema:
            type: string
        - description: language (ISO-639-1)
          in: query
          name: locale
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "500":
          description: internal server error
      summary: Get ITU Information for phone number
      tags:
        - itu
      security:
        - vierOAuth2: []
  /phoneNumbers:
    post:
      description: >-
        Batch processing of multiple numbers at once. Basically receives a list of numbers and returns a map from
        those numbers to results.
      parameters:
        - description: language (ISO-639-1)
          required: false
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneNumbersBatchInput'
      responses:
        '200':
          description: Phone numbers processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/phoneNumbersBatchOutput'
        '400':
          description: >-
            Request did not match expectations. JSON may be broken. More than 1000 phone numbers to process.
            More than 1 MB to process.
        '401':
          description: 'Unauthorized.'
        '500':
          description: 'Internal server error (unexpected).'
      summary: >-
        Take a batch of phone numbers and returns a map from those numbers to results. Fails only if the input as a
        whole is invalid (see 400 response).
      tags:
        - itu
      security:
        - vierOAuth2: []
components:
  schemas:
    PhoneNumber:
      properties:
        countryCode:
          description: ITU country calling code
          example: 49
          type: integer
        geoCoding:
          description: |-
            GetGeocodingForNumber returns the location we think the number was first acquired in. This is
            just our best guess, there is no guarantee to its accuracy.
          example: Berlin
          type: string
          nullable: true
        number:
          description: The given phone number.
          example: "+49304165831"
          type: string
        numberType:
          description: |-
            The Type ot the phone number.
            Possible values are: "fixed line", "mobile", "fixed line or mobile", "toll free", "premium rate",
            "shared cost", "voip", "personal number", "pager", "uan", "voicemail", "unknown"

            Notes:
            "fixed line or mobile":
                In some regions (e.g. the USA), it is impossible to distinguish between fixed-line and mobile numbers by
                looking at the phone number itself.
            "shared cost":
                The cost of this call is shared between the caller and the recipient, and is hence typically less than
                premium rate calls. See http://en.wikipedia.org/wiki/Shared_Cost_Service for more information.
            "voip":
                Voice over IP numbers. This includes TSoIP (Telephony Service over IP).
            "personal number":
                A personal number is associated with a particular person, and may be routed to either a mobile or fixed line
                number. Some more information can be found here: http://en.wikipedia.org/wiki/Personal_Numbers
            "uan":
                Used for "Universal Access Numbers" or "Company Numbers". They may be further routed to specific offices,
                but allow one number to be used for a company.
            "voicemail":
                Used for "Voice Mail Access Numbers".
            "unknown":
                A phone number is of type UNKNOWN when it does not fit any of the known patterns for a specific region.
          example: fixed line
          type: string
          enum: [ "fixed line", "mobile", "fixed line or mobile", "toll free", "premium rate", "shared cost", "voip", "personal number", "pager", "uan", "voicemail", "unknown" ]
        regionCodes:
          description: |-
            List of Region Codes (ISO 3166-1 alpha-2).
            In the case of no region code being found, ZZ will be returned.  If the
            country calling code of the given phone number is valid but doesn't match a specific region
            (such as in the case of non-geographical calling codes like 800) the
            value "001" will be returned (corresponding to the value for World in
            the UN M.49 schema).
          example:
            - DE
          items:
            type: string
          type: array
        regionNames:
          description: Translated common names of the region. Given in the same order
            as RegionCodes.
          example:
            - Germany
          items:
            type: string
          type: array
        formattedNationalNumber:
          description: The national formatted number.
          example: "030 4165831"
          type: string
      type: object
    phoneNumbersBatchInput:
      description: >-
        List of phonenumber candidates. Duplicate items in the list will become a single result in the response.
      type: array
      items:
        type: string
      maxItems: 1000
    phoneNumbersBatchOutput:
      description: >-
        A map that contains one item per unique batch input item. Phonenumbers are keys, values are a wrapper around the
        result as provided by requesting information about a single number (on success for that number), or an error result.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/phoneNumbersBatchOutputResultItem'
    phoneNumbersBatchOutputResultItem:
      type: object
      required:
        - 'type'
      properties:
        'type':
          type: string
          enum:
            - 'success'
            - 'failure'
      discriminator:
        propertyName: 'type'
        mapping:
          success: '#/components/schemas/phoneNumbersBatchOutputSuccessfulItem'
          failure: '#/components/schemas/phoneNumbersBatchOutputFailedItem'
    phoneNumbersBatchOutputSuccessfulItem:
      allOf:
        - $ref: '#/components/schemas/phoneNumbersBatchOutputResultItem'
        - type: object
          required:
            - 'result'
          properties:
            'result':
              $ref: '#/components/schemas/PhoneNumber'
    phoneNumbersBatchOutputFailedItem:
      allOf:
        - $ref: '#/components/schemas/phoneNumbersBatchOutputResultItem'
        - type: object
          required:
            - 'error'
          properties:
            'error':
              type: object
              description: Error object.
  securitySchemes:
    vierOAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-office.4com.de/auth/realms/login/protocol/openid-connect/auth'
          tokenUrl: 'https://sso-office.4com.de/auth/realms/login/protocol/openid-connect/token'
          scopes: {}
        clientCredentials:
          tokenUrl: 'https://sso-office.4com.de/auth/realms/login/protocol/openid-connect/token'
          scopes: {}
