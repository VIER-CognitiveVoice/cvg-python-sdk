openapi: 3.0.0
servers:
  - description: Production
    url: https://cognitivevoice.io/v1
  - description: Staging
    url: https://stage.cognitivevoice.io/v1
  - description: Local Server
    url: https://localhost/v1
info:
  description: |-
    CVG health
  version: '{{VERSION}}'
  title: VIER Cognitive Voice Health API
  contact:
    email: support@vier.ai

paths:
  /health/{resellerToken}/project/{projectToken}:
    parameters:
      - in: query
        name: timeRange
        required: false
        schema:
          $ref: '#/components/schemas/TimeRange'
        description: |-
          - For `ABSOLUTE` time ranges, the `start` and `end` query parameters are required.
          - For `RELATIVE` time ranges, the `delta` query parameter is required.
          - If unspecified, a relative time range of 10 minutes is used.
      - in: query
        name: start
        required: false
        description: The start of an `ABSOLUTE` time range in milliseconds since the epoch (1970-01-01).
        schema:
          $ref: 'shared/time.yml#/components/schemas/Timestamp'
      - in: query
        name: end
        required: false
        description: The end of an `ABSOLUTE` time range in milliseconds since the epoch (1970-01-01).
        schema:
          $ref: 'shared/time.yml#/components/schemas/Timestamp'
      - in: query
        name: delta
        required: false
        description: The duration (in milliseconds) to subtract from "now" to obtain a `RELATIVE` time range.
        schema:
          type: integer
          format: int64
    get:
      tags:
        - health
      summary: |-
        Get the health status of a project based on calls within a time range (by default the last 10 minutes).
        NOTE: this API is still experimental and subject to change.
      operationId: getProjectHealth
      parameters:
        - in: path
          name: resellerToken
          schema:
            $ref: 'shared/tokens.yml#/components/schemas/ResellerToken'
          required: true
        - in: path
          name: projectToken
          schema:
            $ref: 'shared/tokens.yml#/components/schemas/ProjectToken'
          required: true
      responses:
        '200':
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHealth'
        '400':
          description: Illegal query parameter combination
        '404':
          description: Reseller or project not found
components:
  schemas:
    TimeRange:
      type: string
      enum:
        - ABSOLUTE
        - RELATIVE
    HealthEventStatus:
      type: string
      enum:
        - OK
        - WARNING
        - CRITICAL
      description: Status of an individual health event.
    ProjectHealth:
      required:
        - status
        - callCount
        - events
      properties:
        status:
          $ref: 'shared/project_health.yml#/components/schemas/HealthStatus'
        callCount:
          type: integer
          description: How many calls happened within the checked time period.
        events:
          type: array
          items:
            $ref: '#/components/schemas/ProjectHealthEvent'
          description: |-
            The aggregated events with a `count` that indicates how often they happened in the checked time period, in no particular order.
            The same event type can appear multiple times if any of the parameters (like `message`) are different.
    ProjectHealthEvent:
      type: object
      required:
        - type
        - count
        - status
      properties:
        type:
          type: string
          enum:
            - Transcription
            - Synthesis
            - TranscriptionFailed
            - SynthesisFailed
            - AudioPlaybackFailed
            - EndpointCall
            - EndpointCallFailed
            - ProvisioningTimedOut
            - InternalError
        count:
          type: integer
          description: How often this event happened within the checked time period.
        status:
          $ref: '#/components/schemas/HealthEventStatus'
      discriminator:
        propertyName: type
        mapping:
          Transcription: '#/components/schemas/Transcription'
          Synthesis: '#/components/schemas/Synthesis'
          TranscriptionFailed: '#/components/schemas/TranscriptionFailed'
          SynthesisFailed: '#/components/schemas/SynthesisFailed'
          AudioPlaybackFailed: '#/components/schemas/AudioPlaybackFailed'
          EndpointCall: '#/components/schemas/EndpointCall'
          EndpointCallFailed: '#/components/schemas/EndpointCallFailed'
          ProvisioningTimedOut: '#/components/schemas/ProvisioningTimedOut'
          InternalError: '#/components/schemas/InternalError'
    ErrorCode:
      type: string
      description: Error code that should be included in support inquiries.
    SpeechServiceConfiguration:
      type: object
      required:
        - vendor
        - language
      properties:
        vendor:
          $ref: 'shared/speech_service.yml#/components/schemas/Vendor'
        profileToken:
          $ref: 'shared/tokens.yml#/components/schemas/ProfileToken'
        language:
          $ref: 'shared/language.yml#/components/schemas/Language'
    AggregatedLatencies:
      type: object
      additionalProperties:
        type: integer
      description: |-
        How often a latency fell within a given bucket of size 50 ms. For instance, `{ "50": 3, "1000": 1 }` would
        mean that this event had a latency of 0-49 ms three times and a latency of 1000-1049 ms once.
    Transcription:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - type: object
          required:
            - vendor
            - latencies
          properties:
            vendor:
              $ref: 'shared/speech_service.yml#/components/schemas/Vendor'
            latencies:
              $ref: '#/components/schemas/AggregatedLatencies'
      description: Speech was transcribed with the given STT vendor.
    Synthesis:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - type: object
          required:
            - vendor
            - latencies
          properties:
            vendor:
              $ref: 'shared/speech_service.yml#/components/schemas/Vendor'
            latencies:
              $ref: '#/components/schemas/AggregatedLatencies'
      description: Text was synthesized with the given TTS vendor.
    SpeechServiceFailedProperties:
      type: object
      required:
        - configuration
        - errorCode
      properties:
        configuration:
          $ref: '#/components/schemas/SpeechServiceConfiguration'
        # can't reliably detect this as long as fallback handling is in MRF
        # fallback:
        #   $ref: '#/components/schemas/SpeechServiceConfiguration'
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
    TranscriptionFailed:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - $ref: '#/components/schemas/SpeechServiceFailedProperties'
      description: |-
        Transcription with the given configuration failed.
    SynthesisFailed:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - $ref: '#/components/schemas/SpeechServiceFailedProperties'
      description: |-
        Synthesis with the given configuration failed.
    AudioPlaybackFailed:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - type: object
          required:
            - url
            - errorCode
          properties:
            url:
              type: string
              format: uri
              description: The URL of the audio file
            errorCode:
              $ref: '#/components/schemas/ErrorCode'
      description: Playback of the given audio file URL failed.
    EndpointCall:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - type: object
          required:
            - url
            - api
            - latencies
          properties:
            url:
              type: string
              format: uri
              description: The URL that CVG tried to call (base URL + endpoint like /session)
            api:
              type: string
              enum:
                - BOT
                - ASSIST_CLIENT
                - WEBHOOK
              description: Which endpoint API the URL belongs to.
            latencies:
              $ref: '#/components/schemas/AggregatedLatencies'
      description: There was an error while calling an endpoint.
    EndpointCallFailed:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - type: object
          required:
            - url
            - api
          properties:
            url:
              type: string
              description: The request URL (base URL + endpoint like /session)
            api:
              type: string
              enum:
                - CALL
                - BOT
                - DIALOG
                - PROVISIONING
                - ASSIST
                - ASSIST_CLIENT
                - HEALTH
                - RECORDING
                - WEBHOOK
              description: Which API the URL belongs to.
            message:
              type: string
              description: Error message describing what went wrong during the call.
      description: |-
        There was an error while calling an endpoint.

        Note that in some cases, error responses don't produce a health event because they can't be linked to
        a project / dialog.
    ProvisioningTimedOut:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
      description: |-
        A successfully provisioned call wasn't called in time (within 10 seconds).
    InternalError:
      allOf:
        - $ref: '#/components/schemas/ProjectHealthEvent'
        - type: object
          required:
            - message
            - errorCode
          properties:
            message:
              type: string
              description: Basic description of where the error occurred.
            errorCode:
              $ref: '#/components/schemas/ErrorCode'
      description: Internal unexpected error in CVG.
